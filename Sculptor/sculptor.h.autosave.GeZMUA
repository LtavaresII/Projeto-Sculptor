#ifndef SCULPTOR_H
#define SCULPTOR_H
#include <iostream>

using namespace std;
/**
 * @brief A Estrutura Voxel
 */
struct Voxel {
    /**
   * @brief Guarda os valores das cores do voxel, respectivamente, vermelho, verde e azul
   */
  float r,g,b;
  /**
   * @brief Guarda o grau de transparencia do voxel, indo de transparante á opaco
   */
  float a;
  /**
   * @brief Indica se o voxel está presente ou não
   */
  bool isOn;
};
/**
 * @brief A Classe Sculptor
 */
class Sculptor
{
protected:
  /**
   * @brief Armazena a matriz voxel
   */
  Voxel ***v;
  /**
   * @brief Armazena os tamanhos da matriz voxel em 3 dimensões
   */
  int nx,ny,nz;
  /**
   * @brief Armazena as cores e o grau de transparencia da matriz voxel
   */
  float rv,gv,bv,a;
public:
  /**
   * @brief Costrutor da classe Sculptor
   * @param _nx
   * Armazena o valor da matriz em x
   * @param _ny
   * Armazena o valor da matriz em y
   * @param _nz
   * Armazena o valor da matriz em z
   */
  Sculptor(int _nx, int _ny, int _nz);
  /**
   * @brief Destruidor da classe
   */
  ~Sculptor();
  /**
   * @brief Determina as cores e o grau de transparencia da matriz voxel
   * @param Vermelho
   * @param Verde
   * @param Azul
   * @param Grau de Transparencia
   */
  void setColor(float r, float g, float b, float alpha);
  /**
   * @brief Coloca a matriz voxel no sculptor
   * @param x
   * @param y
   * @param z
   */
  void putVoxel(int x, int y, int z);
  /**
   * @brief Retira a matriz voxel do sculptor
   * @param x
   * @param y
   * @param z
   */
  void cutVoxel(int x, int y, int z);
  /**
   * @brief Coloca um conjunto de voxels na forma de um cubo no sculptor
   * @param x0
   * @param x1
   * @param y0
   * @param y1
   * @param z0
   * @param z1
   */
  void putBox(int x0, int x1, int y0, int y1, int z0, int z1);
  /**
   * @brief Retira um conjunto de voxels na forma de um cubo no sculptor
   * @param x0
   * @param x1
   * @param y0
   * @param y1
   * @param z0
   * @param z1
   */
  void cutBox(int x0, int x1, int y0, int y1, int z0, int z1);
  /**
   * @brief Coloca um conjunto de voxels na forma de uma esfera no sculptor
   * @param xcenter
   * @param ycenter
   * @param zcenter
   * @param Raio
   */
  void putSphere(int xcenter, int ycenter, int zcenter, int radius);
  void cutSphere(int xcenter, int ycenter, int zcenter, int radius);
  void putEllipsoid(int xcenter, int ycenter, int zcenter, int rx, int ry, int rz);
  void cutEllipsoid(int xcenter, int ycenter, int zcenter, int rx, int ry, int rz);
  void writeOFF(string filename);
};

#endif // SCULPTOR_H
